<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!--namespace = 所需实现的接口全限定名-->
<mapper namespace="com.bess.springboot.wfx.dao.GoodDAO">
    <resultMap id="goodMap" type="Good">
        <id column="good_id" property="goodId"/>
        <result column="good_name" property="goodName"/>
        <result column="customer_id" property="customerId"/>
        <result column="good_pic1" property="goodPic1"/>
        <result column="good_pic2" property="goodPic2"/>
        <result column="good_pic3" property="goodPic3"/>
        <result column="promote_desc" property="promoteDesc"/>
        <result column="copy_ids" property="copyIds"/>
        <result column="copy_desc" property="copyDesc"/>
        <result column="forward_link" property="forwardLink"/>
        <result column="order_no" property="orderNo"/>
        <result column="tags" property="tags"/>
        <result column="state" property="state"/>
        <result column="create_time" property="createTime"/>
        <result column="toped" property="toped"/>
        <result column="recomed" property="recomed"/>
        <result column="toped_time" property="topedTime"/>
        <result column="recomed_time" property="recomedTime"/>
        <result column="spc_id" property="spcId"/>
        <result column="zon_id" property="zonId"/>
        <result column="sell_num" property="sellNum"/>
        <result column="website" property="website"/>
        <result column="kfqq" property="kfqq"/>
        <association property="goodType" javaType="GoodType">
            <id column="type_id" property="typeId"/>
            <result column="type_name" property="typeName"/>
            <result column="parent_id" property="parentId"/>
            <result column="alisa_code" property="alisaCode"/>
        </association>
    </resultMap>
    <!--    public List<Good> listGoodByCustomerId(@Param("customerId") String customerId,@Param("start") int start,@Param("page") int page);   // 根据商户id查询所有的商品信息-->
    <select id="listGoodByCustomerId" resultSets="java.util.List" resultMap="goodMap">
        select wxb_good.good_id,
        wxb_good.good_name,
        wxb_good.customer_id,
        wxb_good.good_pic1,
        wxb_good.good_pic2,
        wxb_good.good_pic3,
        wxb_good.promote_desc,
        wxb_good.copy_ids,
        wxb_good.copy_desc,
        wxb_good.forward_link,
        wxb_good.order_no,
        wxb_good_type.type_id,
        wxb_good_type.type_name,
        wxb_good_type.parent_id,
        wxb_good_type.alisa_code,
        wxb_good.tags,
        wxb_good.state,
        wxb_good.create_time,
        wxb_good.toped,
        wxb_good.recomed,
        wxb_good.toped_time,
        wxb_good.recomed_time,
        wxb_good.spc_id,
        wxb_good.zon_id,
        wxb_good.sell_num,
        wxb_good.website,
        wxb_good.kfqq
        from wxb_good inner join wxb_good_type on wxb_good.type_id = wxb_good_type.type_id
        where wxb_good.customer_id = #{customerId}
        limit #{start},#{size}
    </select>
<!--    public int insertGood(Good good);   // 添加图书-->
    <insert id="insertGood">
        insert into wxb_good(good_id,good_name,customer_id,good_pic1,promote_desc,copy_ids,copy_desc,forward_link,order_no,type_id,tags,state,create_time,toped,recomed,toped_time,recomed_time,spc_id,zon_id,sell_num,website,kfqq)
        values(#{goodId},#{goodName},#{customerId},#{goodPic1},#{promoteDesc},#{copyIds},#{copyDesc},#{forwardLink},#{orderNo},#{goodType.typeId},#{tags},#{state},#{createTime},#{toped},#{recomed},#{topedTime},#{recomedTime},#{spcId},#{zonId},#{sellNum},#{website},#{kfqq})
    </insert>
<!--    public int deleteGood(String goodId);   // 删除商品-->
    <delete id="deleteGood">
        delete from wxb_good where good_id = #{goodId}
    </delete>
<!--    public int updateGood(Good good);   // 更新商品-->
    <update id="updateGood">
        update wxb_good
        set good_name = #{goodName},good_pic1 = #{goodPic1},promote_desc = #{promoteDesc},copy_desc = #{copyDesc},forward_link = #{forwardLink},type_id = #{goodType.typeId},sell_num = #{sellNum},website = #{website},kfqq = #{kfqq}
        where good_id = #{goodId}
    </update>
<!--    public List<Good> listGoodById(String customerId);   // 根据商户id查询所有的商品信息(不分页)-->
    <select id="listGoodById" resultSets="java.util.List" resultMap="goodMap">
        select wxb_good.good_id,
        wxb_good.good_name,
        wxb_good.customer_id,
        wxb_good.good_pic1,
        wxb_good.good_pic2,
        wxb_good.good_pic3,
        wxb_good.promote_desc,
        wxb_good.copy_ids,
        wxb_good.copy_desc,
        wxb_good.forward_link,
        wxb_good.order_no,
        wxb_good_type.type_id,
        wxb_good_type.type_name,
        wxb_good_type.parent_id,
        wxb_good_type.alisa_code,
        wxb_good.tags,
        wxb_good.state,
        wxb_good.create_time,
        wxb_good.toped,
        wxb_good.recomed,
        wxb_good.toped_time,
        wxb_good.recomed_time,
        wxb_good.spc_id,
        wxb_good.zon_id,
        wxb_good.sell_num,
        wxb_good.website,
        wxb_good.kfqq
        from wxb_good inner join wxb_good_type on wxb_good.type_id = wxb_good_type.type_id
        where wxb_good.customer_id = #{customerId}
    </select>
<!--    public int updateGoodCopy(@Param("copyIds") int copyIds,
        @Param("copyDesc") String copyDesc,
        @Param("goodId") String goodId);  // 添加文案后，对商品的文案关联信息更新-->
    <update id="updateGoodCopy">
        update wxb_good
        set copy_ids = #{copyIds}, copy_desc = #{copyDesc}
        where good_id = #{goodId}
    </update>
<!--    public List<Good> listGood(@Param("start") int start,
        @Param("size") int size);   // 查询所有的商品信息-->
    <select id="listGood" resultSets="java.util.List" resultMap="goodMap">
        select wxb_good.good_id,
        wxb_good.good_name,
        wxb_good.customer_id,
        wxb_good.good_pic1,
        wxb_good.good_pic2,
        wxb_good.good_pic3,
        wxb_good.promote_desc,
        wxb_good.copy_ids,
        wxb_good.copy_desc,
        wxb_good.forward_link,
        wxb_good.order_no,
        wxb_good_type.type_id,
        wxb_good_type.type_name,
        wxb_good_type.parent_id,
        wxb_good_type.alisa_code,
        wxb_good.tags,
        wxb_good.state,
        wxb_good.create_time,
        wxb_good.toped,
        wxb_good.recomed,
        wxb_good.toped_time,
        wxb_good.recomed_time,
        wxb_good.spc_id,
        wxb_good.zon_id,
        wxb_good.sell_num,
        wxb_good.website,
        wxb_good.kfqq
        from wxb_good inner join wxb_good_type on wxb_good.type_id = wxb_good_type.type_id
        limit #{start},#{size}
    </select>
<!--    public int getCount(String customerId); // 查询所有商品数量-->
    <select id="getCount" resultType="int">
        select count(1) from wxb_good
        inner join wxb_good_type on wxb_good.type_id = wxb_good_type.type_id
        <where>
            <if test="customerId != null">
                customer_id = #{customerId}
            </if>
        </where>
    </select>
<!--    public int getSellNum(String goodId);   // 根据商品id查询商品库存-->
    <select id="getSellNum" resultType="int">
        select sell_num from wxb_good
        where good_id = #{goodId}
    </select>
<!--    public int updateSellNum(@Param("goodId") String goodId,
        @Param("num") int num);    // 根据商品id修改库存-->
    <update id="updateSellNum">
        update wxb_good set sell_num = sell_num - #{num}
        where good_id = #{goodId}
    </update>
</mapper>